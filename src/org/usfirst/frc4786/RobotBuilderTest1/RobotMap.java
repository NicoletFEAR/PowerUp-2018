// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4786.RobotBuilderTest1;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.interfaces.Potentiometer;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.I2C;
import edu.wpi.first.wpilibj.I2C.Port;
import edu.wpi.first.wpilibj.SampleRobot;
import edu.wpi.first.wpilibj.Timer;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX frontLeft;
    public static WPI_TalonSRX frontRight;
    public static WPI_TalonSRX midLeft;
    public static WPI_TalonSRX midRight;
    public static WPI_TalonSRX backLeft;
    public static WPI_TalonSRX backRight;
    public static DifferentialDrive robotDrive;
    
    public static AnalogPotentiometer playKnob;
    public static AnalogPotentiometer positionKnob;
    
	public static AnalogInput proximity;
	public static double proxmitySensorScaling = 1023.54145343;
	
    
    public enum AutoPosition {
    	A, B, C, D, E
    }
    public enum AutoPlay {
    	ONE, TWO, THREE, FOUR, FIVE, SIX
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        frontLeft = new WPI_TalonSRX(13);
        frontRight = new WPI_TalonSRX(14);
        midLeft = new WPI_TalonSRX(15);
        midRight = new WPI_TalonSRX(16);
        backLeft = new WPI_TalonSRX(17);
        backRight = new WPI_TalonSRX(18);

        positionKnob = new AnalogPotentiometer(1, 5);
        playKnob = new AnalogPotentiometer(2, 6);
        
        proximity = new AnalogInput(3);
       
        /*
        SpeedControllerGroup m_left = new SpeedControllerGroup(driveTrainTalonSRX13, driveTrainTalonSRX15);
        SpeedControllerGroup m_right = new SpeedControllerGroup(driveTrainTalonSRX14, driveTrainTalonSRX16);

       DifferentialDrive m_drive = new DifferentialDrive(m_left, m_right);              
        m_drive.setSafetyEnabled(true);
        m_drive.setExpiration(0.1);
        m_drive.setMaxOutput(1.0);
       */
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
